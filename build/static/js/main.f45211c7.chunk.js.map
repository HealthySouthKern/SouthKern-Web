{"version":3,"sources":["resources/assets/bhc_logo_color_centered.png","resources/assets/bhc_logo_color_splash.png","resources/strings.js","firebase.js","resources/tokenManager.js","components/login/index.js","components/login/styles.js","components/HOC/styles.js","components/HOC/withLayout.js","components/dashboard/sub_components/statusUpdate/index.js","components/dashboard/sub_components/history/index.js","components/dashboard/sub_components/history/styles.js","components/dashboard/index.js","components/dashboard/styles.js","resources/tableStructure.js","components/channels/index.js","components/channels/styles.js","components/users/index.js","components/users/styles.js","components/settings/index.js","components/settings/styles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","strings","config","apiKey","tokens","getFirebaseAPIToken","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fire","firebase","initializeApp","addPerformedAction","functions","httpsCallable","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCancel","e","console","log","setState","modalVisible","state","email","password","recoveryEmail","loadingReset","auth","onAuthStateChanged","user","history","push","_this2","signInWithEmailAndPassword","then","currentUser","getIdToken","token","database","ref","concat","uid","once","firebaseUser","val","user_type","localStorage","setItem","JSON","stringify","user_name","action","date","Date","now","catch","err","signOut","error","_this3","sendPasswordResetEmail","message","success","_this4","react_default","a","createElement","className","src","bhc_logo","alt","modal","title","visible","onCancel","footer","es_button","onClick","style","marginBottom","input","placeholder","onChange","target","value","loading","sendRecoveryEmail","marginTop","type","card","handleForgottenPassword","href","onLoginClicked","Component","layoutStyle","Header","Content","Sider","Footer","bhcUser","parse","getItem","withLayout","ComponentToWrap","_Component","_class","collapsed","handleMenuClick","bind","assertThisInitialized","displayPageHeader","inherits","createClass","key","clear","currentPath","location","pathname","split","displayName","charAt","toLocaleUpperCase","slice","layout","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","menu","theme","mode","Item","icon","background","padding","margin","minHeight","assign","statusUpdateItem","createdAt","text","humanDate","moment","format","backgroundColor","borderRadius","display","flexDirection","color","fontSize","marginLeft","width","fontWeight","historyItem","displayNick","historyString","dashboard","openChannels","groupChannels","userList","historyItems","chartData","statusUpdates","statusText","showChart","data","options","userCountArray","historyArray","fetchOpenChannels","fetchGroupChannels","fetchSendbirdStatisticsData","userCounts","keys","map","index","generatedLabels","i","labels","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","responsive","maintainAspectRatio","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","offsetGridLines","legend","multiTooltipTemplate","chartOptions","reverse","tempArray","channels","dataObj","sendbirdStatistics","users","_this$state","row","whiteSpace","col","xs","span","lg","marginRight","height","overflowX","overflowY","bodyStyle","es","position","mau","dau","ccu","length","offset","handleStatusPost","statusUpdate","sub_components_statusUpdate","sub_components_history","tableStructure","groupColumns","dataIndex","render","record","unix","created_at","openColumns","TabPane","tabs","fetchChannelMembers","fetchBannedAndMutedUsers","banOrMuteUser","unBanOrUnMuteUser","freezeChannel","deleteChannel","checkIfUserBannedOrMuted","bannedList","arguments","undefined","mutedList","userToCheck","user_id","removeUserFromArray","list","userToRemove","callback","splice","debounce","fn","delay","timer","context","args","clearTimeout","setTimeout","apply","ChannelManager","tableActionMenu","freeze","rel","firebaseToken","channel","channel_url","channelType","member_count","currentUserName","name","deleteModalVisible","recordToDelete","expandedOpenRowRender","parentRecord","indent","expanded","openChannelUsers","participants","isUserBanned","expandedOpenRow","bannedMembers","mutedMembers","children","is_online","last_seen_at","float","es_checkbox","checked","handleUserAction","expandedOpenRowMobile","table","size","dataSource","columns","mobile","expandedGroupRowRender","groupChannelUsers","members","expandedGroupRow","columnsMobile","loadingSubTable","rowKey","expandIconAsCell","handleDeleteModalOk","currentRecord","isGroupChannel","handleDeleteModalCancel","currentTab","isExpanded","loadingTable","handleWindowResize","dropdown","trigger","overlay","onExpand","window","innerWidth","forceUpdate","userID","nickname","channelMembersPromise","channelMembers","fetchBannedPromise","bannedUsers","banned_list","fetchMutedPromise","mutedUsers","muted_list","Promise","all","results","bannedUser","addEventListener","removeEventListener","_this5","_this$state2","onOk","activeKey","handleTabChange","tab","expandIcon","customExpandIcon","handleRowExpand","expandedRowRender","groupColumnsMobile","banOrUnbanUserFromApp","updateUserPasswordAndName","deleteUserFromFirebaseAndSendbird","getUID","sendbirdToken","wrappedLayout","editModalVisible","recordToEdit","handleUserBan","is_banned","userColumns","userColumnsMobile","user_uid","remove","handleModalCancel","modalType","originalUsers","includes","set","form","values","getFieldsValue","user_password","resetFields","validateFields","createUserWithEmailAndPassword","credential","filteredUsers","filter","obj","some","getFieldDecorator","createModalVisible","handleEditModalOk","es_form","initialValue","rules","required","prefix","min","user_organization","user_position","es_select","firstActiveValue","Option","Search","handleSearch","handleUserCreate","zIndex","rowClassName","components_users","create","fetchOrUpdateSendbirdSettings","formItemLayout","labelCol","wrapperCol","wrappedComponent","settings","sendbirdSettings","flag","profanity_filter","domain_filter","profanity_triggered_moderation","domains","count","parseInt","duration","nextContext","colon","display_past_message","toString","es_switch","checkedChildren","unCheckedChildren","defaultChecked","allow_links","help","keywords","defaultValue","handleSettingsSubmit","components_settings","App","BrowserRouter","Route","exact","path","component","Dashboard","Channels","Users","Settings","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f45211c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bhc_logo_color_centered.1ae06d0a.png\";","module.exports = __webpack_public_path__ + \"static/media/bhc_logo_color_splash.9bf5449e.png\";","\r\nconst firebase_api_key = 'AIzaSyDtipUzH0lqYdn6Nr5SENn_f88zj9E5Xrs';\r\n\r\nexport default { firebase_api_key }","import firebase from 'firebase'\r\nimport \"firebase/functions\";\r\n\r\nimport TokenManager from './resources/tokenManager'\r\n\r\n// Initialize Firebase\r\nconst config = {\r\n    apiKey: TokenManager.getFirebaseAPIToken(),\r\n    authDomain: \"southkerntest01.firebaseapp.com\",\r\n    databaseURL: \"https://southkerntest01.firebaseio.com\",\r\n    projectId: \"southkerntest01\",\r\n    storageBucket: \"southkerntest01.appspot.com\",\r\n    messagingSenderId: \"726181107283\"\r\n};\r\nconst fire = firebase.initializeApp(config);\r\n\r\nexport default fire;\r\n","import tokens from './strings.js'\r\n\r\nclass TokenManager {\r\n\r\n    static getFirebaseAPIToken() {\r\n        return tokens.firebase_api_key\r\n    }\r\n}\r\n\r\nexport default TokenManager;","import React, { Component } from 'react';\r\nimport { Input, Button, Card, Modal, message } from \"antd\";\r\n\r\nimport firebase from '../../firebase'\r\n\r\n// Styles\r\nimport { loginStyle } from './styles';\r\nimport bhc_logo from '../../resources/assets/bhc_logo_color_centered.png';\r\n\r\nconst addPerformedAction = firebase.functions().httpsCallable('addPerformedAction');\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            recoveryEmail: '',\r\n            loadingReset: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                if (this.props) {\r\n                    this.props.history.push('/');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onLoginClicked() {\r\n        let email = this.state.email;\r\n        let password = this.state.password;\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\r\n            const currentUser = firebase.auth().currentUser;\r\n\r\n            currentUser.getIdToken().then((token) => {\r\n                    firebase.database().ref(`southkernUsers/${currentUser.uid}`).once('value').then((user) => {\r\n                        const firebaseUser = user.val();\r\n                        if (firebaseUser.user_type === 'admin') {\r\n\r\n                            // route\r\n                            localStorage.setItem('bhc_user', JSON.stringify(firebaseUser));\r\n                            localStorage.setItem('bhc_token', token);\r\n\r\n                            addPerformedAction({token: token, user_name: firebaseUser.user_name, action: 'logged in', date: Date.now()}).then(() => {\r\n                                // history item created\r\n                            }).catch(err => {\r\n                                console.log(err);\r\n                            });\r\n\r\n                            this.setState({ email: '', password: '' });\r\n\r\n                            this.props.history.push('/dashboard');\r\n                        } else {\r\n                            // not an admin -> sign out of firebase\r\n                            firebase.auth().signOut().then(() => {\r\n                                // sign out successful\r\n                                console.log('signed out')\r\n                            });\r\n                        }\r\n                    });\r\n            });\r\n        }).catch(function(error) {\r\n            // Handle Errors here.\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleForgottenPassword() {\r\n        this.setState({\r\n            modalVisible: true\r\n        })\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        console.log(e);\r\n        this.setState({\r\n            modalVisible: false,\r\n        });\r\n    };\r\n\r\n    sendRecoveryEmail() {\r\n        const { recoveryEmail } = this.state;\r\n\r\n        this.setState({ loadingReset: true });\r\n\r\n        firebase.auth().sendPasswordResetEmail(recoveryEmail).then(() => {\r\n            this.setState({ loadingReset: false });\r\n            message.success('Password recovery email sent successfully!');\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='login_container'>\r\n                <img className='login_logo' src={bhc_logo} alt='' />\r\n                <Modal\r\n                    title=\"Password Recovery\"\r\n                    visible={this.state.modalVisible}\r\n                    onCancel={this.handleCancel}\r\n                    footer={\r\n                        <Button onClick={(e) => this.handleCancel(e)}>Cancel</Button>\r\n                    }\r\n                >\r\n                    <p style={{ marginBottom: 10 }}>Email to send recovery form to</p>\r\n                    <Input placeholder='Email here...' onChange={e => this.setState({recoveryEmail: e.target.value})} />\r\n                    <Button loading={this.state.loadingReset} onClick={() => this.sendRecoveryEmail()} style={{ marginTop: 10 }} type='primary'>Send recovery email</Button>\r\n                </Modal>\r\n                <Card className='login_card'>\r\n                    <div className='text_wrapper'>\r\n                        <Input className='login_email' value={this.state.email} placeholder='Email' type='email' onChange={(e) => this.setState({ email: e.target.value })} />\r\n                        <Input className='login_password' value={this.state.password} placeholder='Password' type='password' onChange={(e) => this.setState({ password: e.target.value })} />\r\n                        <a className='login_forgot' onClick={() => this.handleForgottenPassword()} href=\"#\">Forgot password</a>\r\n                        <Button className='login' onClick={() => this.onLoginClicked()} >Login</Button>\r\n                    </div>\r\n                </Card>\r\n                <style>{loginStyle}</style>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","export const loginStyle = `\r\n\r\n.login_container {\r\n    height: 100%;\r\n    width: 100%\r\n    z-index: 0;\r\n}\r\n\r\n.login_card {\r\n    width: 25%;\r\n    height: 32%;\r\n    \r\n    position: absolute;\r\n    top: 40%;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    margin: auto;\r\n    #background-color: #754315;\r\n    border-radius: 10px;\r\n    z-index: 0;\r\n}\r\n\r\n.login_logo {\r\n    height: 200px;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 40%;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    margin: auto;\r\n    z-index: 0;\r\n}\r\n\r\n.text_wrapper {\r\n    z-index: 0;\r\n    position: relative;\r\n    width: 95%;\r\n    margin: auto;\r\n}\r\n\r\n.login_email {\r\n    margin: 5% 0 5% 0;\r\n    z-index: 99;\r\n    background-color: #754315;\r\n    color: white;\r\n}\r\n\r\n.login_password {\r\n    margin: 5% 0 5% 0;\r\n    z-index: 99;\r\n    background-color: #754315;\r\n    color: white;\r\n\r\n}\r\n\r\n.login {\r\n    width: 100%;\r\n    margin: 5% 0 5% 0;\r\n    z-index: 99;\r\n}\r\n\r\n.login_forgot {\r\n    float: right;\r\n    margin-top: 10px;\r\n    color: #754315;\r\n}\r\n\r\n@media (max-width: 1000px) {\r\n    .login_card {\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background-color: #754315;\r\n        height: 55%;\r\n    }\r\n    \r\n    .login_email {\r\n        color: black;\r\n        background-color: white;\r\n        margin: 0 0 10% 0;\r\n    }\r\n    \r\n    .login_password {\r\n        color: black;\r\n        background-color: white;\r\n        margin: 0 0 10% 0;\r\n    }\r\n    \r\n    .login_forgot {\r\n        color: white;\r\n        margin-bottom: 5px;\r\n    }\r\n    \r\n    .login {\r\n        margin: 0 0 10% 0;\r\n    }\r\n    \r\n    .text_wrapper {\r\n        width: 95%;\r\n        margin: auto;\r\n        position: relative;\r\n    }\r\n    \r\n    .login_logo {\r\n        bottom: 50%;\r\n    }\r\n    \r\n    .login_logo {\r\n        height: 150px\r\n    }\r\n}\r\n\r\n`;\r\n","\r\nconst layoutStyle = `\r\n\r\n    .layout_container {\r\n        height: 100%;\r\n    }\r\n    \r\n    .sider_menu {\r\n        background-color: #699C45;\r\n    }\r\n    \r\n    .layout_menu {\r\n        background-color:  #57803A;\r\n    }\r\n    \r\n    .logo_container {\r\n        height: 25%:\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n    \r\n    .logo {\r\n        width: 60%;\r\n        padding: 5%;\r\n        margin: auto;\r\n    }\r\n    \r\n    .header_div {\r\n        margin: auto auto auto 5%;\r\n        height: 100%;\r\n                line-height: 35px;\r\n\r\n        \r\n    }\r\n    \r\n    .header {\r\n        font-size: 175%;\r\n        margin: 0;\r\n        height: 40%;\r\n        position: relative;\r\n    }\r\n    \r\n    .subHeader {\r\n        height: 20%;\r\n        margin: 0;\r\n        position: relative;\r\n    }\r\n    \r\n    .ant-layout-sider-zero-width-trigger {\r\n       background-color: #57803A;\r\n    }\r\n    \r\n    .ant-layout-sider-zero-width-trigger:hover {\r\n        background-color: #57803A;\r\n    }\r\n    \r\n    .content_div {\r\n        padding: 24px;\r\n    }\r\n    \r\n    @media (max-width: 1000px) {\r\n        \r\n        .content_div {\r\n            padding: 5px;\r\n        }\r\n        \r\n        .ant-layout-sider {\r\n          flex: 0 0 95% !important;\r\n          width: 64px;\r\n          max-width: 100% !important;\r\n          min-width: 100% !important;\r\n        }\r\n        \r\n        .ant-layout-sider-collapsed {\r\n          flex: 0 0 0px !important;\r\n          width: 0px;\r\n          max-width: 0px !important;\r\n          min-width: 0px !important;\r\n        }\r\n        \r\n        .ant-layout-sider-zero-width-trigger {\r\n          left: 0 !important;\r\n          float: left !important;\r\n          z-index: 9999;\r\n        }\r\n        \r\n        .logo {\r\n            width: 40%;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default layoutStyle","import React, { Component } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\n\r\nimport layoutStyle from './styles';\r\nimport firebase from '../../firebase';\r\nimport bhc_logo from '../../resources/assets/bhc_logo_color_splash.png';\r\n\r\nconst {\r\n    Header, Content, Footer, Sider,\r\n} = Layout;\r\n\r\nconst bhcUser = JSON.parse(localStorage.getItem('bhc_user'));\r\n\r\nfunction withLayout(ComponentToWrap) {\r\n\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                collapsed: false,\r\n                user: {}\r\n            };\r\n\r\n            this.handleMenuClick = this.handleMenuClick.bind(this);\r\n            this.displayPageHeader = this.displayPageHeader.bind(this);\r\n        }\r\n\r\n        componentWillMount() {\r\n\r\n            // User is not authenticated -> route to login\r\n            if (bhcUser === null) {\r\n                this.props.history.push('/');\r\n            }\r\n\r\n            firebase.auth().onAuthStateChanged((user) => {\r\n                if (user) {\r\n                    // User is signed in.\r\n                    this.setState({ user });\r\n                } else {\r\n                    // No user is signed in.\r\n                    this.props.history.push('/');\r\n                }\r\n            }).bind(this);\r\n        }\r\n\r\n        handleMenuClick(e) {\r\n            console.log(e.key);\r\n            switch(e.key) {\r\n                case 'logout':\r\n                    firebase.auth().signOut().then(() => {\r\n                        localStorage.clear();\r\n                        this.props.history.push('/');\r\n                    });\r\n                    return;\r\n                case 'channels':\r\n                    this.props.history.push('/channels');\r\n                    return;\r\n                case 'dashboard':\r\n                    this.props.history.push('/dashboard');\r\n                    return;\r\n                case 'users':\r\n                    this.props.history.push('/users');\r\n                    return;\r\n                case 'settings':\r\n                    this.props.history.push('/settings');\r\n                    return;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        displayPageHeader() {\r\n            const currentPath = this.props.location.pathname.split('/')[1];\r\n            const displayName = bhcUser.user_name.charAt(0).toLocaleUpperCase() + bhcUser.user_name.slice(1);\r\n            switch(currentPath) {\r\n                case 'dashboard':\r\n                    return (\r\n                        <div className='header_div'>\r\n                            <p className='header'>Dashboard</p>\r\n                            <p className='sub_header'>BHC SouthKern - {displayName}</p>\r\n                        </div>\r\n                    );\r\n                case 'channels':\r\n                    return (\r\n                        <div className='header_div'>\r\n                            <p className='header'>Channels</p>\r\n                            <p className='sub_header'>BHC SouthKern - {displayName}</p>\r\n                        </div>\r\n                    );\r\n                case 'users':\r\n                    return (\r\n                        <div className='header_div'>\r\n                            <p className='header'>Users</p>\r\n                            <p className='sub_header'>BHC SouthKern - {displayName}</p>\r\n                        </div>\r\n                    );\r\n                case 'settings':\r\n                    return (\r\n                        <div className='header_div'>\r\n                            <p className='header'>Settings</p>\r\n                            <p className='sub_header'>BHC SouthKern - {displayName}</p>\r\n                        </div>\r\n                    );\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Layout className='layout_container'>\r\n                    <Sider\r\n                        className='sider_menu'\r\n                        breakpoint=\"lg\"\r\n                        collapsedWidth=\"0\"\r\n                        onBreakpoint={(broken) => { console.log(broken); }}\r\n                        onCollapse={(collapsed, type) => { }}\r\n                    >\r\n                        <div className='logo_container'>\r\n                            <img className=\"logo\" src={bhc_logo} alt='' />\r\n                        </div>\r\n                        <Menu className='layout_menu' onClick={this.handleMenuClick} theme=\"dark\" mode=\"inline\">\r\n                            <Menu.Item key=\"dashboard\">\r\n                                <Icon type=\"line-chart\" />\r\n                                <span className=\"nav-text\">Dashboard</span>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"channels\">\r\n                                <Icon type=\"notification\" />\r\n                                <span className=\"nav-text\">Channels</span>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"users\">\r\n                                <Icon type=\"user\" />\r\n                                <span className=\"nav-text\">Users</span>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"settings\">\r\n                                <Icon type=\"setting\" />\r\n                                <span className=\"nav-text\">Settings</span>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"logout\">\r\n                                <Icon type=\"logout\" />\r\n                                <span className=\"nav-text\">Log out</span>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header style={{ background: '#fff', padding: 0 }} >\r\n                            {this.displayPageHeader()}\r\n                        </Header>\r\n                        <Content style={{ margin: '24px 16px 0' }}>\r\n                            <div className='content_div' style={{ minHeight: 360 }}>\r\n                                <ComponentToWrap user={this.state.user} {...this.props} />\r\n                            </div>\r\n                        </Content>\r\n                        {/*<Footer className='layout_footer' style={{ textAlign: 'center' }}>*/}\r\n                            {/*BHC Admin Interface v1.0.0*/}\r\n                        {/*</Footer>*/}\r\n                    </Layout>\r\n                    <style>{layoutStyle}</style>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withLayout;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { Icon, Row, Col } from 'antd';\r\n\r\nconst statusUpdateItem = (props) => {\r\n    const { createdAt, text } = props;\r\n    let humanDate = moment(createdAt, 'x').format('MMMM Do YYYY, h:mm a');\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#cc202d', borderRadius: 10, padding: 10, display: 'flex', flexDirection: 'row', marginBottom: '2%' }}>\r\n            <div>\r\n                <Icon style={{ color: 'white', fontSize: 30 }} type=\"message\" />\r\n            </div>\r\n            <div style={{ marginLeft: 10, width: '100%'}}>\r\n                <div style={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\r\n                    <p style={{ marginBottom: 0, color: 'white', fontSize: 16, fontWeight: 'bold' }}>Status Update</p>\r\n                    <p style={{ marginBottom: 0, color: 'white', marginLeft: 10, fontSize: 16 }}>{humanDate}</p>\r\n                </div>\r\n                <p style={{ color: 'white', margin: 0 }}>{text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default statusUpdateItem;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport historyStyles from './styles';\r\n\r\nconst historyItem = (props) => {\r\n    const { user_name, action, date } = props;\r\n    let humanDate = moment(date, 'x').format('MMMM Do YYYY, h:mm a');\r\n    let displayNick = user_name.charAt(0).toLocaleUpperCase() + user_name.slice(1);\r\n    let historyString = `${displayNick} ${action} on ${humanDate}`;\r\n    return (\r\n        <div className='history_container'>\r\n            <div className='name_date_container'>\r\n                <p className='history'>{historyString}</p>\r\n            </div>\r\n            <style>{historyStyles}</style>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default historyItem;","const historyStyles = `\r\n\r\n    .history_container {\r\n        margin: 3% auto;\r\n        border-style: none solid none solid;\r\n        border-width: 0.5px;\r\n        padding: 5px;\r\n        background-color: #754315;\r\n        border-radius: 5px;\r\n    }\r\n    \r\n    .name_date_container {\r\n        \r\n    }\r\n    \r\n    .history {\r\n        color: white;\r\n        margin: auto;\r\n    }\r\n    \r\n    .history_date {\r\n        margin: auto;\r\n        color: white;\r\n    }\r\n    \r\n    .action_text {\r\n        color: white;\r\n\r\n    }\r\n    \r\n    hr {\r\n        display: block;\r\n        height: 1px;\r\n        border: 0;\r\n        border-top: 1px solid #ccc;\r\n        margin: 0.5em 0;\r\n        padding: 0;\r\n    }\r\n\r\n`;\r\n\r\nexport default historyStyles;","import React, { Component } from 'react';\r\nimport { Row, Col, Card, Icon, Input, Button } from 'antd';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport withLayout from '../HOC/withLayout';\r\nimport dashboardStyles from \"./styles\";\r\nimport firebase from \"../../firebase\";\r\nimport StatusUpdate from './sub_components/statusUpdate';\r\n\r\nimport HistoryItem from './sub_components/history';\r\n\r\n\r\nclass dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openChannels: [],\r\n            groupChannels: [],\r\n            userList: [],\r\n            historyItems: [],\r\n            user: {},\r\n            chartData: {},\r\n            statusUpdates: [],\r\n            statusText: '',\r\n            showChart: false,\r\n        }\r\n    }\r\n\r\n    handleStatusPost() {\r\n        const { statusText } = this.state;\r\n\r\n        firebase.database().ref('statusUpdates').push({\r\n            text: statusText,\r\n            createdAt: Date.now()\r\n        });\r\n\r\n        this.setState({\r\n            statusText: ''\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.user) {\r\n\r\n            const user = props.user;\r\n            let data = {};\r\n            let options = {};\r\n            let userCountArray = [];\r\n            let historyArray = [];\r\n\r\n            const fetchOpenChannels = firebase.functions().httpsCallable('fetchOpenChannels');\r\n            const fetchGroupChannels = firebase.functions().httpsCallable('fetchGroupChannels');\r\n            const fetchSendbirdStatisticsData = firebase.functions().httpsCallable('fetchSendbirdStatisticsData');\r\n\r\n            firebase.database().ref('analytics/users').once('value').then((userCounts) => {\r\n                Object.keys(userCounts.val()).map((key, index) => {\r\n                    userCountArray[index] = userCounts.val()[key];\r\n                });\r\n\r\n                let generatedLabels = [];\r\n                for (let i = 0 ; i < 30 ; i++) {\r\n                    generatedLabels[i ] = i + 1;\r\n                }\r\n\r\n                data = {\r\n                    labels: generatedLabels,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Users\",\r\n                            fillColor: \"rgba(220,220,220,0.2)\",\r\n                            strokeColor: \"rgba(220,220,220,1)\",\r\n                            pointColor: \"rgba(220,220,220,1)\",\r\n                            pointStrokeColor: \"#fff\",\r\n                            pointHighlightFill: \"#fff\",\r\n                            pointHighlightStroke: \"rgba(220,220,220,1)\",\r\n                            data: userCountArray\r\n                        },\r\n                    ]\r\n                };\r\n\r\n                options = {\r\n                        title: {\r\n                            display: true,\r\n                            text: 'User Count over the Past Thirty Days'\r\n                        }\r\n                    ,\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    scaleShowGridLines : true,\r\n                    scaleGridLineColor : \"rgba(0,0,0,.05)\",\r\n                    scaleGridLineWidth : 1,\r\n                    scaleShowHorizontalLines: true,\r\n                    scaleShowVerticalLines: true,\r\n                    bezierCurve : true,\r\n                    bezierCurveTension : 0.4,\r\n                    pointDot : true,\r\n                    pointDotRadius : 4,\r\n                    pointDotStrokeWidth : 1,\r\n                    pointHitDetectionRadius : 20,\r\n                    datasetStroke : true,\r\n                    datasetStrokeWidth : 2,\r\n                    datasetFill : true,\r\n                    offsetGridLines : false,\r\n                    legend: false,\r\n                    multiTooltipTemplate: \"<%= datasetLabel %> - <%= value %>\"\r\n            };\r\n\r\n                this.setState({ chartData: data, chartOptions: options, showChart: true });\r\n\r\n            });\r\n\r\n            firebase.database().ref('analytics/adminHistory').once('value').then((historyItems) => {\r\n                Object.keys(historyItems.val()).map((key, index) => {\r\n                    historyArray[index] = historyItems.val()[key];\r\n                });\r\n\r\n                this.setState({\r\n                    historyItems: historyArray.reverse()\r\n                })\r\n            });\r\n\r\n            firebase.database().ref('statusUpdates').once('value').then((statusUpdates) => {\r\n                let tempArray = [];\r\n                Object.keys(statusUpdates.val()).map((key, index) => {\r\n                    tempArray.push(statusUpdates.val()[key]);\r\n                });\r\n\r\n                this.setState({ statusUpdates: tempArray });\r\n            });\r\n\r\n            user.getIdToken().then((token) => {\r\n\r\n                fetchOpenChannels({token: token}).then((channels) => {\r\n                    console.log(channels.data[0].channels);\r\n                    this.setState({openChannels: channels.data[0].channels});\r\n                });\r\n\r\n                fetchGroupChannels({token: token}).then((channels) => {\r\n                    console.log(channels.data[0].channels);\r\n                    this.setState({groupChannels: channels.data[0].channels});\r\n                });\r\n\r\n                fetchSendbirdStatisticsData({token: token}).then((dataObj) => {\r\n                    console.log(dataObj)\r\n                    this.setState({sendbirdStatistics: dataObj.data});\r\n                });\r\n\r\n                firebase.database().ref('southkernUsers').once('value').then(users => {\r\n                    let tempArray = [];\r\n                    Object.keys(users.val()).map((key, index) => {\r\n                        tempArray[index] = users.val()[key];\r\n                    });\r\n                    this.setState({ userList: tempArray });\r\n                });\r\n\r\n            });\r\n        } else {\r\n            this.props.history.push('/');\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { groupChannels, openChannels, userList, sendbirdStatistics, chartData, chartOptions, statusUpdates, showChart, historyItems } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Row style={{ whiteSpace: 'nowrap', marginBottom: '2%' }}>\r\n                    <Col className='grid_container' xs={{ span: 1 }} lg={{ span: 1 }} style={{ width: '100%', marginLeft: 'auto', marginRight: 'auto', marginTop: '-3%', height: 300 }}>\r\n                        <Card className='grid_box' style={{ overflowX: 'scroll', overflowY: 'hidden' }} bodyStyle={{ width: '100%' }}>\r\n                        {showChart\r\n                            ? (\r\n                                <div className='chart_div'>\r\n                                <Line data={chartData} options={chartOptions} height={0} width={'100%'} style={{ position: 'absolute', width: '100%' , height: '90%', padding: '1%' }} />\r\n                                </div>\r\n                              )\r\n                            : (\r\n                                <div/>\r\n                              )\r\n                        }\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='stats_history_wrapper' style={{ marginBottom: '2%' }}>\r\n                    <Col className='grid_container' xs={{ span: 1 }} lg={{ span: 1 }}>\r\n                    <Card className='grid_box' style={{ overflowX: 'hidden', overflowY: 'scroll' }}>\r\n                        <h3>Quick Stats</h3>\r\n                        <hr />\r\n                        <div className='data_wrapper'>\r\n                            <p className='data_title'>Monthly Active Users</p> <p className='data'>{sendbirdStatistics ? sendbirdStatistics.mau : 0}</p>\r\n                        </div>\r\n                        <hr />\r\n                        <div className='data_wrapper'>\r\n                            <p className='data_title'>Daily Active users</p> <p className='data'>{sendbirdStatistics ? sendbirdStatistics.dau : 0}</p>\r\n                        </div>\r\n                        <hr />\r\n                        <div className='data_wrapper'>\r\n                            <p className='data_title'>Currently Online Users</p> <p className='data'>{sendbirdStatistics ? sendbirdStatistics.ccu : 0}</p>\r\n                        </div>\r\n                        <hr />\r\n                        <div className='data_wrapper'>\r\n                            <p className='data_title'>Total Current Users</p> <p className='data'>{userList.length}</p>\r\n                        </div>\r\n                        <hr />\r\n                        <span className='data_wrapper'>\r\n                            <p className='data_title'>Total Open Channels</p> <p className='data'>{openChannels.length}</p>\r\n                        </span>\r\n                        <hr />\r\n                        <span className='data_wrapper'>\r\n                            <p className='data_title'>Total Group Channels</p> <p className='data'>{groupChannels.length}</p>\r\n                        </span>\r\n                        <hr />\r\n                    </Card>\r\n                    </Col>\r\n                    <Col className='grid_container' xs={{ span: 1, offset: 1 }}>\r\n                        <Card className='grid_box' style={{ overflowX: 'hidden', overflowY: 'scroll' }}>\r\n                            <Input value={this.state.statusText} style={{ marginBottom: '2%' }} onChange={(e) => { this.setState({ statusText: e.target.value })}} placeholder='What is going on in the community?' />\r\n                            <Button style={{ marginBottom: '2%' }} onClick={() => this.handleStatusPost()} >Post Status Update</Button>\r\n                            {statusUpdates ? statusUpdates.map((statusUpdate) => {\r\n                                return <StatusUpdate createdAt={statusUpdate.createdAt} text={statusUpdate.text} />\r\n                            }) : (\r\n                                <div/>\r\n                            )}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='stats_history_wrapper'>\r\n                    <Col className='grid_container' xs={{ span: 1 }}>\r\n                        <Card className='grid_box' style={{ overflowY: 'scroll', overflowX: 'hidden' }}>\r\n                            {historyItems.map(historyItem => {\r\n                                return <HistoryItem user_name={historyItem.user_name} action={historyItem.action} date={historyItem.date} />\r\n                            })}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <style>{dashboardStyles}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLayout(dashboard);","const dashboardStyles = `\r\n\r\n    .grid_container {\r\n        width: 47.9%;\r\n        height: 250px;\r\n        background-color: white;\r\n\r\n    }\r\n    \r\n    .grid_box {\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: white;\r\n        text-align: left;\r\n    }\r\n    \r\n    .ant-card-body {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n    \r\n    .data_wrapper {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 70%;\r\n        margin-top: auto;\r\n        \r\n    }\r\n    \r\n    .data_title {\r\n        margin: 0;\r\n    }\r\n    \r\n    .data {\r\n        position: absolute;\r\n        left: 90%;\r\n        right: 5%;\r\n        text-align: right;\r\n        margin: 0;\r\n    }\r\n    \r\n    hr {\r\n        display: block;\r\n        height: 1px;\r\n        border: 0;\r\n        border-top: 1px solid #ccc;\r\n        margin: 0.5em 0;\r\n        padding: 0;\r\n    }\r\n    \r\n    stats_history_wrapper {\r\n        margin-top: 3%;\r\n        display: flex;\r\n        flex-direction: row ;\r\n    }\r\n    \r\n    .chart_div {\r\n            width: 100%;\r\n            height: 100%;\r\n    }\r\n    \r\n    @media (max-width: 1000px) {\r\n        stats_history_wrapper {\r\n            flex-direction: column;\r\n        }\r\n        \r\n        .grid_container {\r\n            width: 100%;\r\n            margin: auto;\r\n            margin-bottom: 2%;\r\n        }\r\n        \r\n        .chart_div {\r\n            width: 800px;\r\n        }\r\n        \r\n        .card_wrapper {\r\n            width: 800px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default dashboardStyles;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\n\r\nconst openColumns = [{\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n}, {\r\n    title: 'Participants',\r\n    dataIndex: 'participant_count',\r\n    key: 'participant_count',\r\n}, {\r\n    title: 'Date Created',\r\n    render: (value, record, index) => {\r\n        let humanDate = moment.unix(value.created_at).format('MMMM Do YYYY');\r\n        return <div>{humanDate}</div>\r\n    },\r\n    key: 'created_at',\r\n}];\r\n\r\nconst groupColumns = [{\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n}, {\r\n    title: 'Participants',\r\n    className: 'table_participants_column',\r\n    dataIndex: 'member_count',\r\n    key: 'member_count',\r\n}, {\r\n    title: 'Date Created',\r\n    className: 'table_created_column',\r\n    render: (value, record, index) => {\r\n        let humanDate = moment.unix(value.created_at).format('MMMM Do YYYY');\r\n        return <div>{humanDate}</div>\r\n    },\r\n    key: 'created_at',\r\n}];\r\n\r\n\r\n\r\n\r\nexport default { groupColumns: groupColumns, openColumns: openColumns };","import React, { Component } from 'react';\r\nimport {Checkbox, Table, Tabs, Icon, Dropdown, Menu, Modal, Button } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport channelStyles from './styles';\r\nimport withLayout from '../HOC/withLayout';\r\nimport firebase from \"../../firebase\";\r\nimport columns from '../../resources/tableStructure';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nconst fetchOpenChannels = firebase.functions().httpsCallable('fetchOpenChannels');\r\nconst fetchGroupChannels = firebase.functions().httpsCallable('fetchGroupChannels');\r\nconst fetchChannelMembers = firebase.functions().httpsCallable('fetchChannelMembers');\r\nconst fetchBannedAndMutedUsers = firebase.functions().httpsCallable('fetchBannedAndMutedUsers');\r\nconst banOrMuteUser = firebase.functions().httpsCallable('banOrMuteUser');\r\nconst unBanOrUnMuteUser = firebase.functions().httpsCallable('unBanOrUnMuteUser');\r\nconst freezeChannel = firebase.functions().httpsCallable('freezeChannel');\r\nconst deleteChannel = firebase.functions().httpsCallable('deleteChannel');\r\nconst addPerformedAction = firebase.functions().httpsCallable('addPerformedAction');\r\n\r\n\r\nfunction checkIfUserBannedOrMuted(bannedList = null, mutedList =  null, userToCheck) {\r\n    if (userToCheck) {\r\n        if (bannedList) {\r\n            for (let i = 0; i < bannedList.length; i++) {\r\n\r\n                if (bannedList[i].user != null) {\r\n                    if (bannedList[i].user.user_id === userToCheck.user_id) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    if (bannedList[i].user_id === userToCheck.user_id) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        } else if (mutedList) {\r\n            for (let i = 0; i < mutedList.length; i++) {\r\n\r\n                if (mutedList[i].user != null) {\r\n                    if (mutedList[i].user.user_id === userToCheck.user_id) {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    if (mutedList[i].user_id === userToCheck.user_id) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction removeUserFromArray(list, userToRemove, callback) {\r\n    for (let i = 0 ; i < list.length ; i++) {\r\n        if (list[i].user_id === userToRemove.user_id) {\r\n            list.splice(i, 1); // remove element from array\r\n            break;\r\n        }\r\n    }\r\n    callback();\r\n}\r\n\r\nfunction debounce(fn, delay) {\r\n    let timer = null;\r\n    return function () {\r\n        let context = this, args = arguments;\r\n        clearTimeout(timer);\r\n        timer = setTimeout(function () {\r\n            fn.apply(context, args);\r\n        }, delay);\r\n    };\r\n}\r\n\r\nclass ChannelManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openChannels: [],\r\n            groupChannels: [],\r\n            currentTab: 'openChannels',\r\n            firebaseToken: '',\r\n            isExpanded: false,\r\n            loadingTable: true,\r\n            loadingSubTable: true,\r\n            mobile: false,\r\n            deleteModalVisible: false,\r\n            recordToDelete: null,\r\n        };\r\n\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n\r\n        if (columns.openColumns[columns.openColumns.length - 1].title !== '') {\r\n            columns.groupColumns.push({\r\n                title: '',\r\n                className: 'table_actions',\r\n                render: (value, record, index) => {\r\n                    return (\r\n                        <Dropdown trigger={['click']} overlay={() => this.tableActionMenu(record)}>\r\n                            <Icon className='more_icon' type='ellipsis'/>\r\n                        </Dropdown>\r\n                    )\r\n                }\r\n            });\r\n\r\n            columns.openColumns.push({\r\n                title: '',\r\n                className: 'table_actions',\r\n                render: (value, record, index) => {\r\n                    return (\r\n                        <Dropdown trigger={['click']} overlay={() => this.tableActionMenu(record)}>\r\n                            <Icon className='more_icon' type='ellipsis'/>\r\n                        </Dropdown>\r\n                    )\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // *** Table Structure *** //\r\n\r\n\r\n\r\n\r\n    tableActionMenu = (record) => {\r\n        console.log(record);\r\n       return (\r\n            <Menu>\r\n                <Menu.Item style={{ backgroundColor: record.freeze ? ' #85c1e9 ' : 'white' }}>\r\n                    <a target=\"_blank\"\r\n                       rel=\"noopener noreferrer\"\r\n                       style={{ color: record.freeze ? 'white' : ''}}\r\n                       onClick={() => {\r\n                           freezeChannel({\r\n                               token: this.state.firebaseToken,\r\n                               channel: record.channel_url,\r\n                               channelType: record.member_count ? 'group_channels' : 'open_channels',\r\n                               freeze: !record.freeze\r\n                           }).then((data) => {\r\n                               record.freeze = !record.freeze;\r\n                               addPerformedAction({\r\n                                   token: this.state.firebaseToken,\r\n                                   user_name: this.state.currentUserName,\r\n                                   date: Date.now(),\r\n                                   action: `${record.freeze ? 'froze' : 'defrosted'} channel ${record.name}`\r\n                               });\r\n                               return data;\r\n                           }).catch((e) => {\r\n                               console.log(e);\r\n                           })\r\n                       }}\r\n                    >\r\n                        {!record.freeze ? 'Freeze channel' : 'Defrost channel'}\r\n                    </a>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\"\r\n                       rel=\"noopener noreferrer\"\r\n                       onClick={() => {\r\n                           this.setState({ deleteModalVisible: true, recordToDelete: record });\r\n                       }}\r\n                    >\r\n                        Delete channel\r\n                    </a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    };\r\n\r\n    customExpandIcon(props) {\r\n        if (props.expanded) {\r\n            return <a style={{ color: 'black' }} onClick={e => {\r\n                props.onExpand(props.record, e);\r\n            }\r\n            }><Icon type=\"minus\" /></a>\r\n        } else {\r\n            return <a style={{ color: 'black' }} onClick={e => {\r\n                props.onExpand(props.record, e);\r\n            }\r\n            }><Icon type=\"plus\" /></a>\r\n        }\r\n    }\r\n\r\n    expandedOpenRowRender = (parentRecord, index, indent, expanded) => {\r\n        const openChannelUsers = parentRecord.participants;\r\n        let isUserBanned = false;\r\n\r\n        const expandedOpenRow = [{\r\n            title: 'Email',\r\n            className: 'email_column',\r\n            dataIndex: 'user_id',\r\n            render: (value, record, index) => {\r\n                if (parentRecord.bannedMembers) {\r\n                    isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                }\r\n                return {\r\n                    props: {\r\n                        style: { background: isUserBanned ? '#ddd' : '#fff' }\r\n                    },\r\n                    children: <div>{value}</div>\r\n                }\r\n            }\r\n        }, {\r\n            title: 'Username',\r\n            dataIndex: 'nickname',\r\n            render: (value, record, index) => {\r\n                if (parentRecord.bannedMembers) {\r\n                    isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                }\r\n                return {\r\n                    props: {\r\n                        style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                    },\r\n                    children: <div>{value}</div>\r\n                }\r\n            }\r\n        }, {\r\n            title: 'Status',\r\n            className: 'status_column',\r\n            render: (value, record, index) => {\r\n                if (parentRecord.bannedMembers) {\r\n                    isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                }\r\n                return {\r\n                    props: {\r\n                        style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                    },\r\n                    children: <div>{record.is_online ? 'Online' : 'Offline'}</div>\r\n                }\r\n            },\r\n            key: 'is_online'\r\n        }, {\r\n            title: 'Last Online',\r\n            className: 'last_online_column',\r\n            render: (value, record, index) => {\r\n                if (parentRecord.bannedMembers) {\r\n                    isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                }\r\n                let humanDate = record.is_online ? 'Now' : moment(record.last_seen_at).format('MMMM Do YYYY');\r\n                return {\r\n                    props: {\r\n                        style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                    },\r\n                    children: <div>{humanDate}</div>\r\n                }\r\n            },\r\n            key: 'last_online'\r\n        }, {\r\n            title: 'Actions',\r\n            dataIndex: 'operation',\r\n            key: 'operation',\r\n            render: (value, record, index) => {\r\n                if (parentRecord.bannedMembers) {\r\n                    isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                }\r\n                return {\r\n                    props: {\r\n                        style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                    },\r\n                    children: <div style={{width: '100%', float: 'left'}}>\r\n                        <Checkbox\r\n                            className='banUser'\r\n                            style={{whiteSpace: 'nowrap'}}\r\n                            key='banUser'\r\n                            checked={parentRecord.bannedMembers ? checkIfUserBannedOrMuted(parentRecord.bannedMembers, null, record) : null}\r\n                            onChange={(e) => this.handleUserAction(e, record, parentRecord, 'ban')}\r\n                        >\r\n                            Banned\r\n                        </Checkbox>\r\n                        <Checkbox\r\n                            className='muteUser'\r\n                            style={{margin: 0, whiteSpace: 'nowrap'}}\r\n                            key='muteUser'\r\n                            checked={parentRecord.mutedMembers ? checkIfUserBannedOrMuted(null, parentRecord.mutedMembers, record) : null}\r\n                            onChange={(e) => this.handleUserAction(e, record, parentRecord, 'mute')}\r\n                        >\r\n                            Muted\r\n                        </Checkbox>\r\n                    </div>\r\n                }\r\n            },\r\n        }];\r\n\r\n        const expandedOpenRowMobile = [{\r\n            title: 'Nickname',\r\n            dataIndex: 'user_name',\r\n            key: 'user_name'\r\n        }, {\r\n            title: 'Actions',\r\n            dataIndex: 'operation',\r\n            key: 'operation',\r\n            render: (value, record, index) => (\r\n                <div style={{ width: '100%', float: 'left' }}>\r\n                    <Checkbox\r\n                        className='banUser'\r\n                        style={{ whiteSpace: 'nowrap' }}\r\n                        key='banUser'\r\n                        checked={parentRecord.bannedMembers ? checkIfUserBannedOrMuted(parentRecord.bannedMembers, null, record) : null}\r\n                        onChange={(e) => this.handleUserAction(e, record, parentRecord, 'ban')}\r\n                    >\r\n                        Banned\r\n                    </Checkbox>\r\n                    <Checkbox\r\n                        className='muteUser'\r\n                        style={{ margin: 0, whiteSpace: 'nowrap' }}\r\n                        key='muteUser'\r\n                        checked={parentRecord.mutedMembers ? checkIfUserBannedOrMuted(null, parentRecord.mutedMembers, record) : null}\r\n                        onChange={(e) => this.handleUserAction(e, record, parentRecord, 'mute')}\r\n                    >\r\n                        Muted\r\n                    </Checkbox>\r\n                </div>\r\n            ),\r\n        }];\r\n\r\n        return <Table size={\"middle\"} dataSource={openChannelUsers}  columns={!this.state.mobile ? expandedOpenRow : expandedOpenRowMobile} />\r\n    };\r\n\r\n    expandedGroupRowRender = (parentRecord, index, indent, expanded) => {\r\n        console.log(parentRecord);\r\n        console.log(index);\r\n        console.log(indent);\r\n            const groupChannelUsers = parentRecord.members;\r\n            let isUserBanned = false;\r\n\r\n            const expandedGroupRow = [{\r\n                title: 'Email',\r\n                className: 'email_column',\r\n                dataIndex: 'user_id',\r\n                render: (value, record, index) => {\r\n                    if (parentRecord.bannedMembers) {\r\n                        isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                    }\r\n                    return {\r\n                        props: {\r\n                            style: { background: isUserBanned ? '#ddd' : '#fff' }\r\n                        },\r\n                        children: <div>{value}</div>\r\n                    }\r\n                }\r\n            }, {\r\n                title: 'Username',\r\n                dataIndex: 'nickname',\r\n                render: (value, record, index) => {\r\n                    if (parentRecord.bannedMembers) {\r\n                        isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                    }\r\n                    return {\r\n                        props: {\r\n                            style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                        },\r\n                        children: <div>{value}</div>\r\n                    }\r\n                }\r\n            }, {\r\n                title: 'Status',\r\n                className: 'status_column',\r\n                render: (value, record, index) => {\r\n                    if (parentRecord.bannedMembers) {\r\n                        isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                    }\r\n                    return {\r\n                        props: {\r\n                            style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                        },\r\n                        children: <div>{record.is_online ? 'Online' : 'Offline'}</div>\r\n                    }\r\n                },\r\n                key: 'is_online'\r\n            }, {\r\n                title: 'Last Online',\r\n                className: 'last_online_column',\r\n                render: (value, record, index) => {\r\n                    if (parentRecord.bannedMembers) {\r\n                        isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                    }\r\n                    let humanDate = record.is_online ? 'Now' : moment(record.last_seen_at).format('MMMM Do YYYY');\r\n                    return {\r\n                        props: {\r\n                            style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                        },\r\n                        children: <div>{humanDate}</div>\r\n                    }\r\n                },\r\n                key: 'last_online'\r\n            }, {\r\n                title: 'Actions',\r\n                dataIndex: 'operation',\r\n                key: 'operation',\r\n                render: (value, record, index) => {\r\n                    if (parentRecord.bannedMembers) {\r\n                        isUserBanned = checkIfUserBannedOrMuted(parentRecord.bannedMembers, parentRecord.mutedMembers, record)\r\n                    }\r\n                    return {\r\n                        props: {\r\n                            style: {background: isUserBanned ? '#ddd' : '#fff'}\r\n                        },\r\n                        children: <div style={{width: '100%', float: 'left'}}>\r\n                            <Checkbox\r\n                                className='banUser'\r\n                                style={{whiteSpace: 'nowrap'}}\r\n                                key='banUser'\r\n                                checked={parentRecord.bannedMembers ? checkIfUserBannedOrMuted(parentRecord.bannedMembers, null, record) : null}\r\n                                onChange={(e) => this.handleUserAction(e, record, parentRecord, 'ban')}\r\n                            >\r\n                                Banned\r\n                            </Checkbox>\r\n                            <Checkbox\r\n                                className='muteUser'\r\n                                style={{margin: 0, whiteSpace: 'nowrap'}}\r\n                                key='muteUser'\r\n                                checked={parentRecord.mutedMembers ? checkIfUserBannedOrMuted(null, parentRecord.mutedMembers, record) : null}\r\n                                onChange={(e) => this.handleUserAction(e, record, parentRecord, 'mute')}\r\n                            >\r\n                                Muted\r\n                            </Checkbox>\r\n                        </div>\r\n                    }\r\n                },\r\n            }];\r\n\r\n            const columnsMobile = [{\r\n                title: 'Username',\r\n                dataIndex: 'nickname',\r\n                key: 'nickname'\r\n            }, {\r\n                title: 'Actions',\r\n                dataIndex: 'operation',\r\n                key: 'operation',\r\n                render: (value, record, index) => (\r\n                    <div style={{width: '100%', float: 'left'}}>\r\n                        <Checkbox\r\n                            className='banUser'\r\n                            style={{whiteSpace: 'nowrap'}}\r\n                            key='banUser'\r\n                            checked={parentRecord.bannedMembers ? checkIfUserBannedOrMuted(parentRecord.bannedMembers, null, record) : null}\r\n                            onChange={(e) => this.handleUserAction(e, record, parentRecord, 'ban')}\r\n                        >\r\n                            Banned\r\n                        </Checkbox>\r\n                        <Checkbox\r\n                            className='muteUser'\r\n                            style={{margin: 0, whiteSpace: 'nowrap'}}\r\n                            key='muteUser'\r\n                            checked={parentRecord.mutedMembers ? checkIfUserBannedOrMuted(null, parentRecord.mutedMembers, record) : null}\r\n                            onChange={(e) => this.handleUserAction(e, record, parentRecord, 'mute')}\r\n                        >\r\n                            Muted\r\n                        </Checkbox>\r\n                    </div>\r\n                ),\r\n            }];\r\n\r\n            return <Table size={\"middle\"} loading={this.state.loadingSubTable} rowKey={record => record.uid}\r\n                          dataSource={groupChannelUsers}\r\n                          expandIconAsCell={false}\r\n                          columns={!this.state.mobile ? expandedGroupRow : columnsMobile}/>\r\n    };\r\n\r\n\r\n\r\n\r\n    // *** Handlers *** //\r\n\r\n\r\n\r\n\r\n\r\n    handleDeleteModalOk = (e, currentRecord) => {\r\n        const { groupChannels, openChannels } = this.state;\r\n\r\n        let isGroupChannel = !!currentRecord.member_count;\r\n\r\n        let channels = isGroupChannel ? groupChannels : openChannels;\r\n\r\n        for (let i = 0 ; i < channels.length ; i++) {\r\n            if (channels[i] === currentRecord) {\r\n                channels.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        deleteChannel({\r\n            token: this.state.firebaseToken,\r\n            channel: currentRecord.channel_url,\r\n            channelType: currentRecord.member_count ? 'group_channels' : 'open_channels',\r\n        }).then((data) => {\r\n            addPerformedAction({\r\n                token: this.state.firebaseToken,\r\n                user_name: this.state.currentUserName,\r\n                date: Date.now(),\r\n                action: `deleted channel ${currentRecord.name}`\r\n            });\r\n\r\n            return data.data;\r\n        });\r\n\r\n        if (isGroupChannel) {\r\n            this.setState({\r\n                deleteModalVisible: false,\r\n                groupChannels: channels\r\n            });\r\n        } else {\r\n            this.setState({\r\n                deleteModalVisible: false,\r\n                openChannels: channels\r\n            })\r\n        }\r\n    };\r\n\r\n    handleDeleteModalCancel = (e) => {\r\n        this.setState({\r\n            deleteModalVisible: false,\r\n        });\r\n    };\r\n\r\n    handleWindowResize() {\r\n        if (window.innerWidth <= 760) {\r\n            this.setState({ mobile: true })\r\n        } else {\r\n            this.setState({ mobile: false })\r\n        }\r\n    }\r\n\r\n    handleTabChange(key) {\r\n        this.setState({ currentTab: key });\r\n    }\r\n\r\n    handleUserAction(e, record, parentRecord, action) {\r\n        if (!!parentRecord.firebaseToken) {\r\n            if (e.target.checked) {\r\n                switch (action) {\r\n                    case 'ban':\r\n                        parentRecord.bannedMembers.push(record);\r\n                        this.forceUpdate();\r\n                        banOrMuteUser({\r\n                            token: parentRecord.firebaseToken,\r\n                            userID: record.user_id,\r\n                            channelType: parentRecord.members ? 'group_channels' : 'open_channels',\r\n                            channel: parentRecord.channel_url,\r\n                            action: 'ban'\r\n                        }).then((data) => {\r\n                            addPerformedAction({\r\n                                token: this.state.firebaseToken,\r\n                                user_name: this.state.currentUserName,\r\n                                date: Date.now(),\r\n                                action: `banned ${record.nickname} from ${parentRecord.name}`\r\n                            });\r\n                        });\r\n                        break;\r\n                    case 'mute':\r\n                        parentRecord.mutedMembers.push(record);\r\n                        this.forceUpdate();\r\n                        banOrMuteUser({\r\n                            token: parentRecord.firebaseToken,\r\n                            userID: record.user_id,\r\n                            channelType: parentRecord.members ? 'group_channels' : 'open_channels',\r\n                            channel: parentRecord.channel_url,\r\n                            action: 'mute'\r\n                        }).then((data) => {\r\n                            addPerformedAction({\r\n                                token: this.state.firebaseToken,\r\n                                user_name: this.state.currentUserName,\r\n                                date: Date.now(),\r\n                                action: `muted ${record.nickname} in ${parentRecord.name}`\r\n                            });\r\n                        });\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (action) {\r\n                    case 'ban':\r\n                        removeUserFromArray(parentRecord.bannedMembers, record, () => {\r\n                            this.forceUpdate();\r\n                        });\r\n                        unBanOrUnMuteUser({\r\n                            token: parentRecord.firebaseToken,\r\n                            userID: record.user_id,\r\n                            channelType: parentRecord.members ? 'group_channels' : 'open_channels',\r\n                            channel: parentRecord.channel_url,\r\n                            action: 'ban'\r\n                        }).then(() => {\r\n                            addPerformedAction({\r\n                                token: this.state.firebaseToken,\r\n                                user_name: this.state.currentUserName,\r\n                                date: Date.now(),\r\n                                action: `unbanned ${record.nickname} from ${parentRecord.name}`\r\n                            });\r\n                        }).catch(e => {\r\n                            console.log(e);\r\n                        });\r\n                        break;\r\n                    case 'mute':\r\n                        removeUserFromArray(parentRecord.mutedMembers, record, () => {\r\n                            this.forceUpdate();\r\n                        });\r\n                        unBanOrUnMuteUser({\r\n                            token: parentRecord.firebaseToken,\r\n                            userID: record.user_id,\r\n                            channelType: parentRecord.members ? 'group_channels' : 'open_channels',\r\n                            channel: parentRecord.channel_url,\r\n                            action: 'mute'\r\n                        }).then((data) => {\r\n                            addPerformedAction({\r\n                                token: this.state.firebaseToken,\r\n                                user_name: this.state.currentUserName,\r\n                                date: Date.now(),\r\n                                action: `unmuted ${record.nickname} in ${parentRecord.name}`\r\n                            });\r\n                        }).catch(e => {\r\n                            console.log(e);\r\n                        });\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleRowExpand(isExpanded, record) {\r\n        let isGroupChannel = !!record.member_count;\r\n        if (isExpanded) {\r\n            this.setState({ loadingSubTable: true });\r\n\r\n            const channelMembersPromise = fetchChannelMembers({token: this.state.firebaseToken, channel: record.channel_url, isGroupChannel: isGroupChannel}).then((channelMembers) => {\r\n                isGroupChannel ? (\r\n                    record.members = channelMembers.data[0].members\r\n                ) : (\r\n                    record.participants = channelMembers.data[0].participants\r\n                );\r\n\r\n                record.firebaseToken = this.state.firebaseToken;\r\n            });\r\n\r\n            const fetchBannedPromise = fetchBannedAndMutedUsers({\r\n                token: this.state.firebaseToken,\r\n                channel: record.channel_url,\r\n                channelType: isGroupChannel ? 'group_channels' : 'open_channels',\r\n                action: 'ban'\r\n            }).then((bannedUsers) => {\r\n                record.bannedMembers = bannedUsers.data.banned_list;\r\n                return bannedUsers.data.banned_list;\r\n            }).catch((e) => {\r\n                console.log(e);\r\n            });\r\n\r\n            const fetchMutedPromise = fetchBannedAndMutedUsers({\r\n                token: this.state.firebaseToken,\r\n                channel: record.channel_url,\r\n                channelType: isGroupChannel ? 'group_channels' : 'open_channels',\r\n                action: 'mute'\r\n            }).then((mutedUsers) => {\r\n                console.log(mutedUsers.data.muted_list);\r\n\r\n                record.mutedMembers = mutedUsers.data.muted_list;\r\n            }).catch((e) => {\r\n                console.log(e);\r\n            });\r\n\r\n            Promise.all([channelMembersPromise, fetchBannedPromise, fetchMutedPromise].map(p => p.catch(e => e))).then(results => {\r\n                let bannedUsers = results[1];\r\n                if (isGroupChannel && record) {\r\n                    for (let bannedUser in bannedUsers) {\r\n                        record.members.push(bannedUsers[bannedUser].user);\r\n                    }\r\n                } else {\r\n                    for (let bannedUser in bannedUsers) {\r\n                        record.participants.push(bannedUsers[bannedUser].user);\r\n                    }\r\n                }\r\n\r\n                this.setState({ isExpanded, loadingSubTable: false });\r\n            }).catch(e => {\r\n                console.log(e);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // *** Life cycle functions *** //\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        if (window.innerWidth <= 760) {\r\n            this.setState({ mobile: true });\r\n        }\r\n        window.addEventListener(\"resize\", debounce(this.handleWindowResize, 500))\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.user) {\r\n            const { user } = props;\r\n\r\n            user.getIdToken().then((token) => {\r\n\r\n                fetchOpenChannels({token: token}).then((channels) => {\r\n                    this.setState({ openChannels: channels.data[0].channels, firebaseToken: token, currentUserName: user.displayName });\r\n                });\r\n\r\n                fetchGroupChannels({token: token}).then((channels) => {\r\n                    this.setState({ groupChannels: channels.data[0].channels, loadingTable: false });\r\n                });\r\n\r\n            });\r\n\r\n\r\n\r\n        } else {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', debounce(this.handleWindowResize, 500));\r\n    }\r\n\r\n    // *** HTML *** //\r\n\r\n    render() {\r\n        const { groupChannels, openChannels, loadingTable, deleteModalVisible, recordToDelete } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Confirm Channel Deletion\"\r\n                    visible={deleteModalVisible}\r\n                    onOk={this.handleDeleteModalOk}\r\n                    onCancel={this.handleDeleteModalCancel}\r\n                    footer={<span style={{ whiteSpace: 'nowrap' }}>\r\n                        <Button onClick={(e) => this.handleDeleteModalCancel(e)}>Cancel</Button>\r\n                        <Button onClick={(e) => this.handleDeleteModalOk(e, recordToDelete)} type='danger'>Delete</Button>\r\n                    </span>}\r\n                >\r\n                    <p>Are you sure you want to delete {recordToDelete ? recordToDelete.name : 'this channel'}?</p>\r\n                </Modal>\r\n                <Tabs style={{ margin: 0, padding: 0, width: '100%' }} activeKey={this.state.currentTab} onChange={(key) => this.handleTabChange(key)}>\r\n                    <TabPane tab=\"Open Channels\" key=\"openChannels\">\r\n                        <Table\r\n                            expandIcon={(record) => this.customExpandIcon(record)}\r\n                            loading={loadingTable}\r\n                            dataSource={openChannels}\r\n                            onExpand={(isExpanded, record) => this.handleRowExpand(isExpanded, record)}\r\n                            expandedRowRender={(record) => this.expandedOpenRowRender(record)}\r\n                            columns={!this.state.mobile ? columns.openColumns : columns.groupColumnsMobile}\r\n                            rowKey={record => record.channel_url} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Group Channels\" key=\"groupChannels\">\r\n                        <Table\r\n                            expandIcon={(record) => this.customExpandIcon(record)}\r\n                            loading={loadingTable}\r\n                            dataSource={groupChannels}\r\n                            onExpand={(isExpanded, record) => this.handleRowExpand(isExpanded, record)}\r\n                            expandedRowRender={(record, index, indent) => this.expandedGroupRowRender(record, index, indent)}\r\n                            columns={!this.state.mobile ? columns.groupColumns : columns.groupColumnsMobile}\r\n                            rowKey={record => record.channel_url} />\r\n                    </TabPane>\r\n                </Tabs>\r\n                <style>{channelStyles}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLayout(ChannelManager);","const channelStyles = `\r\n    .ant-pagination {\r\n        margin: 16px 16px 0 0 !important;\r\n    }\r\n    \r\n    .more_icon {\r\n        -webkit-transform: rotate(90deg);\r\n        -moz-transform: rotate(90deg);\r\n        -o-transform: rotate(90deg);\r\n        -ms-transform: rotate(90deg);\r\n        transform: rotate(90deg);\r\n        \r\n        cursor: pointer;\r\n        font-size: 25px;\r\n    }\r\n    \r\n    @media (max-width: 1000px) {\r\n        .email_column {\r\n            display: hidden !important;\r\n        }\r\n        \r\n        .status_column {\r\n            display: hidden !important;\r\n        }\r\n        \r\n        .last_online_column {\r\n            display: hidden !important;\r\n        }\r\n        \r\n        .table_created_column {\r\n            display: hidden !important;\r\n        }\r\n        \r\n        .table_participants_column {\r\n            display: hidden !important;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default channelStyles;","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Table, Button, Modal, Dropdown, Icon, Menu, Form, Input, Select } from \"antd\";\r\n\r\n\r\nimport withLayout from '../HOC/withLayout';\r\nimport firebase from '../../firebase';\r\nimport userStyles from './styles';\r\n\r\nconst banOrUnbanUserFromApp = firebase.functions().httpsCallable('banOrUnbanUserFromApp');\r\nconst updateUserPasswordAndName = firebase.functions().httpsCallable('updateUserPasswordAndName');\r\nconst deleteUserFromFirebaseAndSendbird = firebase.functions().httpsCallable('deleteUserFromFirebaseAndSendbird');\r\nconst addPerformedAction = firebase.functions().httpsCallable('addPerformedAction');\r\n\r\nfunction debounce(fn, delay) {\r\n    let timer = null;\r\n    return function () {\r\n        let context = this, args = arguments;\r\n        clearTimeout(timer);\r\n        timer = setTimeout(function () {\r\n            fn.apply(context, args);\r\n        }, delay);\r\n    };\r\n}\r\n\r\nfunction getUID(record) {\r\n    if (record.uid) {\r\n        return record.uid;\r\n    } else {\r\n        firebase.database().ref(`southkernUsers`).once('value').then(users => {\r\n            Object.keys(users.val()).map((key, index) => {\r\n                if (users.val()[key].sendbirdToken === record.sendbirdToken) {\r\n                    return key;\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nclass users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users: [],\r\n            originalUsers: [],\r\n            mobile: false,\r\n            recordToDelete: null,\r\n            recordToEdit: null,\r\n            deleteModalVisible: false,\r\n            editModalVisible: false,\r\n            firebaseToken: null,\r\n        }\r\n\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    }\r\n\r\n    // *** Table Structure *** //\r\n\r\n    tableActionMenu = (record) => {\r\n        return (\r\n            <Menu>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\"\r\n                       rel=\"noopener noreferrer\"\r\n                       onClick={() => {\r\n                           this.setState({\r\n                               editModalVisible: true,\r\n                               recordToEdit: record\r\n                           })\r\n                       }}\r\n                    >\r\n                        Edit\r\n                    </a>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\"\r\n                       rel=\"noopener noreferrer\"\r\n                       onClick={() => {\r\n                            this.handleUserBan(record);\r\n                       }}\r\n                    >\r\n                        {!record.is_banned ? 'Ban' : 'Unban'}\r\n                    </a>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <a target=\"_blank\"\r\n                       rel=\"noopener noreferrer\"\r\n                       onClick={() => {\r\n                           this.setState({\r\n                               deleteModalVisible: true,\r\n                               recordToDelete: record });\r\n                       }}\r\n                    >\r\n                        Delete\r\n                    </a>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    };\r\n\r\n    userColumns = [{\r\n        title: 'Email',\r\n        dataIndex: 'user_id',\r\n        key: 'user_id',\r\n    }, {\r\n        title: 'Name',\r\n        dataIndex: 'user_name',\r\n        key: 'user_name',\r\n    }, {\r\n        title: 'Status',\r\n        className: 'status_column',\r\n        render: (value, record, index) => {\r\n            return <div>{record.is_online ? 'Online' : 'Offline' }</div>\r\n        },\r\n        key: 'is_online'\r\n    }, {\r\n        title: 'Last Online',\r\n        className: 'last_online_column',\r\n        render: (value, record, index) => {\r\n            let humanDate = record.is_online ? 'Now' : moment(record.last_seen_at).format('MMMM Do YYYY');\r\n            return <div>{humanDate}</div>\r\n        },\r\n        key: 'last_online'\r\n    }, {\r\n        title: '',\r\n        className: 'table_actions',\r\n        render: (value, record, index) => {\r\n            return (\r\n                <Dropdown trigger={['click']} overlay={() => this.tableActionMenu(record)}>\r\n                    <Icon className='more_icon' type='ellipsis' />\r\n                </Dropdown>\r\n            )\r\n        }\r\n    }];\r\n\r\n    userColumnsMobile = [this.userColumns[1], this.userColumns[4]];\r\n\r\n    // *** Handlers *** //\r\n\r\n    handleUserCreate(e) {\r\n        this.setState({\r\n            recordToEdit: null,\r\n            editModalVisible: true,\r\n        })\r\n    }\r\n\r\n    handleUserBan(currentRecord) {\r\n        firebase.database().ref('bannedUsers').once('value').then(bannedUsers => {\r\n\r\n            let action = 'ban';\r\n\r\n            if (this.props.user) {\r\n                this.props.user.getIdToken().then(token => {\r\n                    if (bannedUsers.val() != null) {\r\n                        if (Object.keys(bannedUsers.val()).includes(getUID(currentRecord))) {\r\n                            action = 'unban'\r\n                        } else {\r\n                            action = 'ban'\r\n                        }\r\n                    }\r\n\r\n                    firebase.database().ref(`southkernUsers/${getUID(currentRecord)}/is_banned`).set(action === 'ban');\r\n\r\n                    // Optimistic UI update\r\n                    currentRecord.is_banned = action === 'ban';\r\n\r\n                    banOrUnbanUserFromApp({\r\n                        action: action,\r\n                        token: token,\r\n                        user_uid: getUID(currentRecord)\r\n                    }).then(() => {\r\n                        addPerformedAction({\r\n                            token: this.state.firebaseToken,\r\n                            user_name: this.state.currentUserName,\r\n                            date: Date.now(),\r\n                            action: `${action === 'ban' ? 'banned' : 'unbanned'} ${currentRecord.user_name}`\r\n                        });\r\n                    });\r\n                    this.forceUpdate();\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEditModalOk(e, currentRecord) {\r\n\r\n        if (this.props.form) {\r\n            const values = this.props.form.getFieldsValue();\r\n\r\n            if (currentRecord != null) {\r\n\r\n                if (values.user_password != null) {\r\n                    updateUserPasswordAndName({\r\n                        name: currentRecord.user_name,\r\n                        user_uid: getUID(currentRecord),\r\n                        password: values.user_password,\r\n                        token: this.state.firebaseToken\r\n                    })\r\n                }\r\n\r\n                // Don't store password in database, it is already stored in firebase auth\r\n                values.user_password = null;\r\n\r\n                Object.keys(values).map((key, index) => {\r\n                    currentRecord[key] = values[key];\r\n                });\r\n\r\n                firebase.database().ref(`southkernUsers/${getUID(currentRecord)}`).set(currentRecord).then(() => {\r\n                    addPerformedAction({\r\n                        token: this.state.firebaseToken,\r\n                        user_name: this.state.currentUserName,\r\n                        date: Date.now(),\r\n                        action: `edited ${currentRecord.user_name}`\r\n                    });\r\n                });\r\n\r\n                this.props.form.resetFields();\r\n\r\n                this.setState({ editModalVisible: false });\r\n\r\n            } else {\r\n                // If current record does not exist then the user is not being edited. Instead, we will create them.\r\n                // I believe this is an efficient solution because then we can reuse the edit user modal instead of creating\r\n                // a separate modal and handlers.\r\n                this.props.form.validateFields(err => {\r\n                    if (!err) {\r\n                        firebase.auth().createUserWithEmailAndPassword(values.user_id, values.user_password).then(credential => {\r\n                            console.log(credential.user.uid);\r\n\r\n                            updateUserPasswordAndName({\r\n                                token: this.state.firebaseToken,\r\n                                password: values.user_password,\r\n                                name: values.user_name,\r\n                                user_uid: credential.user.uid\r\n                            }).then(() => {\r\n                                addPerformedAction({\r\n                                    token: this.state.firebaseToken,\r\n                                    user_name: this.state.currentUserName,\r\n                                    date: Date.now(),\r\n                                    action: `created ${currentRecord.user_name}`\r\n                                });\r\n                            });\r\n\r\n                            // Do not want to store passwords in firebase database. But, we want to make sure they can sign into\r\n                            // the mobile app without having to do the account creation process.\r\n                            values.user_password = null;\r\n\r\n                            values.uid = credential.user.uid;\r\n\r\n                            // Once unique push key has been generated, add it to the user object.\r\n                            firebase.database().ref(`southkernUsers/${credential.user.uid}`).set(values);\r\n\r\n                            this.props.form.resetFields();\r\n\r\n                            this.setState({ editModalVisible: false });\r\n\r\n                        });\r\n\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({ editModalVisible: false });\r\n\r\n            //TODO show error if form props does not exist\r\n            console.log('form props missing');\r\n        }\r\n\r\n    }\r\n\r\n    handleDeleteModalOk = (e, currentRecord) => {\r\n        const { users } = this.state;\r\n\r\n        // Optimistic UI update\r\n        for (let i = 0 ; i < users.length ; i++) {\r\n            if (users[i] === currentRecord) {\r\n                users.splice(i , 1);\r\n            }\r\n        }\r\n        deleteUserFromFirebaseAndSendbird({\r\n            token: this.state.firebaseToken,\r\n            email: currentRecord.user_id,\r\n            user_uid: getUID(currentRecord)\r\n        }).then(() => {\r\n            addPerformedAction({\r\n                token: this.state.firebaseToken,\r\n                user_name: this.state.currentUserName,\r\n                date: Date.now(),\r\n                action: `deleted ${currentRecord.user_name}`\r\n            });\r\n        });\r\n\r\n        firebase.database().ref(`southkernUsers/${getUID(currentRecord)}`).remove();\r\n\r\n        this.setState({ deleteModalVisible: false, users })\r\n\r\n    };\r\n\r\n    handleModalCancel = (e, modalType) => {\r\n        switch(modalType) {\r\n            case 'delete':\r\n                this.setState({\r\n                    deleteModalVisible: false,\r\n                });\r\n                break;\r\n            case 'edit':\r\n                this.setState({\r\n                    editModalVisible: false,\r\n                });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    handleWindowResize() {\r\n        if (window.innerWidth <= 760) {\r\n            this.setState({ mobile: true })\r\n        } else {\r\n            this.setState({ mobile: false })\r\n        }\r\n    }\r\n\r\n    handleSearch(e) {\r\n        const { value } = e.target;\r\n        const { users, originalUsers } = this.state;\r\n\r\n        if (value !== '') {\r\n            let filteredUsers = users.filter(obj => Object.keys(obj).some(key => {\r\n                if (obj[key].includes) {\r\n                    return obj[key].includes(value)\r\n                } else {\r\n                    return false;\r\n                }\r\n            }));\r\n\r\n            this.setState({ users: filteredUsers });\r\n        } else {\r\n            this.setState({ users: originalUsers });\r\n        }\r\n\r\n    }\r\n\r\n    // *** Lifecycle Functions *** //\r\n\r\n    componentWillMount() {\r\n        if (window.innerWidth <= 760) {\r\n            this.setState({ mobile: true });\r\n        }\r\n        window.addEventListener(\"resize\", debounce(this.handleWindowResize, 500))\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.user) {\r\n\r\n            const user = props.user;\r\n\r\n            user.getIdToken().then(token => {\r\n                firebase.database().ref('southkernUsers').once('value').then(users => {\r\n                    let tempArray = [];\r\n                    Object.keys(users.val()).map((key, index) => {\r\n                        tempArray[index] = users.val()[key];\r\n                    });\r\n                    this.setState({ users: tempArray, originalUsers: tempArray, firebaseToken: token, currentUserName: user.displayName });\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { users, loadingTable, recordToDelete, recordToEdit, deleteModalVisible, editModalVisible, createModalVisible } = this.state;\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"Confirm User Deletion\"\r\n                    visible={deleteModalVisible}\r\n                    onCancel={(e) => this.handleModalCancel(e, 'delete')}\r\n                    footer={<span style={{ whiteSpace: 'nowrap' }}>\r\n                        <Button onClick={(e) => this.handleModalCancel(e, 'delete')}>Cancel</Button>\r\n                        <Button onClick={(e) => this.handleDeleteModalOk(e, recordToDelete)} type='danger'>Delete</Button>\r\n                    </span>}\r\n                >\r\n                    <p>Are you sure you want to delete {recordToDelete ? recordToDelete.user_name ? recordToDelete.user_name : 'this user' : null}?</p>\r\n                </Modal>\r\n                <Modal\r\n                    title={`${recordToEdit ? 'Edit' : 'Create'} ${recordToEdit ? recordToEdit.user_name ? recordToEdit.user_name : 'User' : 'User'}`}\r\n                    visible={editModalVisible}\r\n                    onCancel={(e) => this.handleModalCancel(e, 'edit')}\r\n                    footer={<span style={{ whiteSpace: 'nowrap' }}>\r\n                        <Button onClick={(e) => this.handleModalCancel(e, 'edit')}>Cancel</Button>\r\n                        <Button onClick={(e) => this.handleEditModalOk(e, recordToEdit)} type='primary'>{recordToEdit ? 'Apply' : 'Create'}</Button>\r\n                    </span>}\r\n                >\r\n                    <Form layout='vertical'>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('user_id', {\r\n                                initialValue: recordToEdit ? recordToEdit.user_id : null,\r\n                                rules: [{required: true, message: 'Please enter a email'}],\r\n                            })(\r\n                                <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>} placeholder=\"Email\"/>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('user_name', {\r\n                                initialValue: recordToEdit ? recordToEdit.user_name : null,\r\n                                rules: [{required: true, message: 'Please enter a username.'}]\r\n                            })(\r\n                                <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                       placeholder=\"Username\"/>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('user_password', {\r\n                                initialValue: null,\r\n                                rules: [\r\n                                    {required: true, message: 'Please enter a password.'},\r\n                                    {min: 6, message: 'Password must be at least six characters long'}\r\n                                    ]\r\n                            })(\r\n                                <Input type='password' prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                                       placeholder=\"Password\"/>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('user_organization', {\r\n                                initialValue: recordToEdit ? recordToEdit.user_organization : null,\r\n                            })(\r\n                                <Input placeholder=\"User Organization\"/>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('user_position', {\r\n                                initialValue: recordToEdit ? recordToEdit.user_position : null,\r\n                            })(\r\n                                <Input placeholder=\"User Position\"/>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('user_type', {\r\n                                initialValue: recordToEdit ? recordToEdit.user_type : 'resident',\r\n                            })(\r\n                                <Select firstActiveValue={recordToEdit ? recordToEdit.user_type : 'resident'} placeholder=\"User role\">\r\n                                    <Select.Option value=\"admin\">Administrator</Select.Option>\r\n                                    <Select.Option value=\"organization\">Organization</Select.Option>\r\n                                    <Select.Option value=\"resident\">Resident</Select.Option>\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n                <div style={{ whiteSpace: this.state.mobile ? '' : 'nowrap' }}>\r\n                    <Input.Search onChange={(e) => this.handleSearch(e)} type='search' placeholder='Search for people' style={{ width: '75%'}} />\r\n                    <Button\r\n                        onClick={(e) => this.handleUserCreate(e)}\r\n                        style={{ zIndex: 999, marginBottom: 10, marginLeft: this.state.mobile ? 0 : 10, marginTop: this.state.mobile ? 10 : 0 }}\r\n                        size='medium'\r\n                        type='primary'\r\n                        icon='user-add'\r\n                    >\r\n                        Create user\r\n                    </Button>\r\n                </div>\r\n                <Table\r\n                    rowClassName={(record, index) => { return record.is_banned ? 'banned' : 'not_banned'}}\r\n                    loading={loadingTable}\r\n                    dataSource={users}\r\n                    columns={!this.state.mobile ? this.userColumns : this.userColumnsMobile} />\r\n                    <style>{userStyles}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst wrappedLayout = withLayout(users);\r\n\r\nexport default Form.create({ name: 'edit_user' })(wrappedLayout);","const userStyles = `\r\n    .more_icon {\r\n        -webkit-transform: rotate(90deg);\r\n        -moz-transform: rotate(90deg);\r\n        -o-transform: rotate(90deg);\r\n        -ms-transform: rotate(90deg);\r\n        transform: rotate(90deg);\r\n        \r\n        cursor: pointer;\r\n        font-size: 25px;\r\n    }\r\n    \r\n    .banned {\r\n        background-color: #ddd;\r\n    }\r\n    \r\n`;\r\n\r\nexport default userStyles;","import React, { Component } from 'react';\r\nimport { Form, Select, Icon, Button, Switch, Card, Input } from 'antd';\r\n\r\nimport withLayout from '../HOC/withLayout'\r\nimport firebase from '../../firebase';\r\nimport settingsStyles from \"./styles\";\r\n\r\nconst Option = Select.Option;\r\nconst fetchOrUpdateSendbirdSettings = firebase.functions().httpsCallable('fetchOrUpdateSendbirdSettings');\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 5, offset: 1 },\r\n};\r\n\r\nclass settings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sendbirdSettings: null,\r\n            flag: true\r\n        };\r\n    }\r\n\r\n    handleSettingsSubmit() {\r\n        if (this.props.form) {\r\n            const values = this.props.form.getFieldsValue();\r\n\r\n            // Reconverting from human readable format.\r\n            switch(values.profanity_filter.type) {\r\n                case 'Do nothing':\r\n                    values.profanity_filter.type = 0;\r\n                    break;\r\n                case 'Replace with asterisks':\r\n                    values.profanity_filter.type = 1;\r\n                    break;\r\n                case 'Block messages':\r\n                    values.profanity_filter.type = 2;\r\n                    break;\r\n            }\r\n\r\n            switch(values.domain_filter.type) {\r\n                case 'Do nothing':\r\n                    values.domain_filter.type = 0;\r\n                    break;\r\n                case 'Allow only these domains':\r\n                    values.domain_filter.type = 1;\r\n                    break;\r\n                case 'Block these domains':\r\n                    values.domain_filter.type = 2;\r\n                    break;\r\n            }\r\n\r\n            switch(values.profanity_triggered_moderation.action) {\r\n                case 'Do nothing':\r\n                    values.profanity_triggered_moderation.action = 0;\r\n                    break;\r\n                case 'Mute user':\r\n                    values.profanity_triggered_moderation.action = 1;\r\n                    break;\r\n                case 'Kick user from channel':\r\n                    values.profanity_triggered_moderation.action = 2;\r\n                    break;\r\n                case 'Ban user from channel':\r\n                    values.profanity_triggered_moderation.action = 3;\r\n                    break;\r\n            }\r\n\r\n            values.domain_filter.domains = values.domain_filter.domains.split(',');\r\n            values.profanity_triggered_moderation.count = parseInt(values.profanity_triggered_moderation.count);\r\n            values.profanity_triggered_moderation.duration = parseInt(values.profanity_triggered_moderation.duration * 60);\r\n\r\n            console.log(values);\r\n\r\n            fetchOrUpdateSendbirdSettings({ token: this.state.firebaseToken, settings: values });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(props, nextContext) {\r\n        if (props.user && this.state.flag) {\r\n            props.user.getIdToken().then(token => {\r\n                fetchOrUpdateSendbirdSettings({ token }).then(settings => {\r\n                    console.log(settings);\r\n\r\n                    // Conversions so that settings are human readable.\r\n                    switch (settings.data.profanity_filter.type) {\r\n                        case 0:\r\n                            settings.data.profanity_filter.type = 'Do nothing';\r\n                            break;\r\n                        case 1:\r\n                            settings.data.profanity_filter.type = 'Replace with asterisks';\r\n                            break;\r\n                        case 2:\r\n                            settings.data.profanity_filter.type = 'Block messages';\r\n                            break;\r\n                    }\r\n\r\n                    switch (settings.data.domain_filter.type) {\r\n                        case 0:\r\n                            settings.data.domain_filter.type = 'Do nothing';\r\n                            break;\r\n                        case 1:\r\n                            settings.data.domain_filter.type = 'Allow only these domains';\r\n                            break;\r\n                        case 2:\r\n                            settings.data.domain_filter.type = 'Block these domains';\r\n                            break;\r\n                    }\r\n\r\n                    switch (settings.data.profanity_triggered_moderation.action) {\r\n                        case 0:\r\n                            settings.data.profanity_triggered_moderation.action = 'Do nothing';\r\n                            break;\r\n                        case 1:\r\n                            settings.data.profanity_triggered_moderation.action = 'Mute user';\r\n                            break;\r\n                        case 2:\r\n                            settings.data.profanity_triggered_moderation.action = 'Kick user from channel';\r\n                            break;\r\n                        case 3:\r\n                            settings.data.profanity_triggered_moderation.action = 'Ban user from channel';\r\n                    }\r\n\r\n                    this.setState({ sendbirdSettings: settings.data, firebaseToken: token, flag: false });\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { sendbirdSettings } = this.state;\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        if (!sendbirdSettings)\r\n            return <div/>;\r\n\r\n        return (\r\n            <Card style={{ width: '100%'}}>\r\n                <Form { ...formItemLayout } layout='vertical' className=\"login-form\">\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Allow new users to see previous messages in channels' colon={false}>\r\n                        {getFieldDecorator('display_past_message', {\r\n                            initialValue: sendbirdSettings.display_past_message.toString()\r\n                        })(\r\n                            <Switch checkedChildren='Yes' unCheckedChildren='No' defaultChecked={sendbirdSettings.display_past_message}/>\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Allow links in chat messages'>\r\n                        {getFieldDecorator('allow_links', {\r\n                            initialValue: sendbirdSettings.allow_links.toString(),\r\n                        })(\r\n                            <Switch checkedChildren='Yes' unCheckedChildren='No' defaultChecked={sendbirdSettings.allow_links}/>\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Filtered keywords' help='Specifies the comma-separated words to filter from chat messages. *word filters all words that end with \"word\" including \"word\" itself while word* filters all words that start with \"word\" including \"word\" itself.'>\r\n                        {getFieldDecorator('profanity_filter.keywords', {\r\n                            initialValue: sendbirdSettings.profanity_filter.keywords,\r\n                        })(\r\n                            <Input defaultValue={sendbirdSettings.profanity_filter.keywords} placeholder='*sex*, *profanity* ... ' />\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Keyword filter type'>\r\n                        {getFieldDecorator('profanity_filter.type', {\r\n                            initialValue: sendbirdSettings.profanity_filter.type,\r\n                        })(\r\n                            <Select firstActiveValue={sendbirdSettings.profanity_filter.type}>\r\n                                <Option value='Do nothing'>Do nothing</Option>\r\n                                <Option value='Replace with asterisks'>Replace with asterisks</Option>\r\n                                <Option value='Block messages'>Block messages</Option>\r\n                            </Select>\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Filtered domains' help={`Specifies an list of domains to filter from chat messages. Each item of the list should be specified at least with a combination of domain name and TLD (top level domain) like 'amazon.com'.`}>\r\n                        {getFieldDecorator('domain_filter.domains', {\r\n                            initialValue: sendbirdSettings.domain_filter.domains.toString(),\r\n                        })(\r\n                            <Input defaultValue={sendbirdSettings.domain_filter.domains} placeholder={`amazon.com, google.com ...`} />\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Domain filter type'>\r\n                        {getFieldDecorator('domain_filter.type', {\r\n                            initialValue: sendbirdSettings.domain_filter.type,\r\n                        })(\r\n                            <Select firstActiveValue={sendbirdSettings.domain_filter.type}>\r\n                                <Option value='Do nothing'>Do nothing</Option>\r\n                                <Option value='Allow only these domains'>Allow only these domains</Option>\r\n                                <Option value='Block these domains'>Block these domains</Option>\r\n                            </Select>\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Automated profanity moderation count' help='Number of infractions before a user is automatically punished. A value of 0 turns off automated moderation.'>\r\n                        {getFieldDecorator('profanity_triggered_moderation.count', {\r\n                            initialValue: sendbirdSettings.profanity_triggered_moderation.count.toString(),\r\n                        })(\r\n                            <Input defaultValue={sendbirdSettings.profanity_triggered_moderation.count.toString()} />\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Automated profanity moderation duration' help='Minutes before previous infractions are forgotten. If count above is two and the duration is five, then the user will be punished if they commit two infractions within five minutes.'>\r\n                        {getFieldDecorator('profanity_triggered_moderation.duration', {\r\n                            initialValue: sendbirdSettings.profanity_triggered_moderation.duration / 60,\r\n                        })(\r\n                            <Input defaultValue={sendbirdSettings.profanity_triggered_moderation.duration / 60} />\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container'>\r\n                    <Form.Item label='Automated profanity moderation severity' help='Action to perform when a user commits enough infractions during the specified duration.'>\r\n                        {getFieldDecorator('profanity_triggered_moderation.action', {\r\n                            initialValue: sendbirdSettings.profanity_triggered_moderation.action,\r\n                        })(\r\n                            <Select firstActiveValue={sendbirdSettings.profanity_triggered_moderation.action}>\r\n                                <Option value='Do nothing'>Do nothing</Option>\r\n                                <Option value='Mute user'>Mute user</Option>\r\n                                <Option value='Kick user from channel'>Kick user from channel</Option>\r\n                                <Option value='Ban user from channel'>Ban user from channel</Option>\r\n                            </Select>\r\n                        )}\r\n                    </Form.Item>\r\n                    </Card>\r\n                    <Card className='settings_container' style={{ whiteSpace: 'nowrap' }}>\r\n                    <Button\r\n                        style={{ marginRight: 10 }}\r\n                        onClick={() => {\r\n                        if (this.props.form) {\r\n                            this.props.form.resetFields();\r\n                        }\r\n                    }}>Reset</Button>\r\n                    <Button type='primary' onClick={() => this.handleSettingsSubmit()}>Submit</Button>\r\n                    </Card>\r\n                </Form>\r\n                <style>{settingsStyles}</style>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst wrappedComponent = withLayout(settings);\r\n\r\nexport default Form.create({ name: 'settings_form' })(wrappedComponent);","\r\nconst settingsStyles = `\r\n    .settings_container {\r\n        float: right;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport default settingsStyles;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport 'antd/dist/antd.css';  // or 'antd/dist/antd.less'\r\nimport './App.less';\r\n\r\n// Components\r\nimport Login from './components/login';\r\nimport Dashboard from './components/dashboard';\r\nimport Channels from './components/channels';\r\nimport Users from './components/users';\r\nimport Settings from './components/settings';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div style={{ height: '100%' }}>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/channels\" component={Channels} />\r\n          <Route path=\"/users\" component={Users} />\r\n          <Route path=\"/settings\" component={Settings} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}